@startuml(id=User_Info_App_Component_View)
scale max 2000x2000
title Internet Banking System - User Info App - Components
caption User Info App Component View

skinparam {
  shadowing false
  arrowColor #707070
  actorBorderColor #707070
  componentBorderColor #707070
  rectangleBorderColor #707070
  noteBackgroundColor #ffffff
  noteBorderColor #707070
}
rectangle 29 <<Container>> #dddddd [
  API Gateway
  --
  API Gateway: AWS API Gateway
  / Spring Cloud
]
rectangle 25 <<Container>> #dddddd [
  Audit Database
  --
  Audit Database: SQL DB
]
rectangle 9 <<Person>> #dddddd [
  Bank Client
  --
  Bank Client
]
rectangle 33 <<Container>> #dddddd [
  Banking Core Facade App
  --
  Banking Core Facade App:
  Spring Boot
]
rectangle 1 <<Software System>> #dddddd [
  Banking Core System
  --
  Banking Core System
]
rectangle 24 <<Container>> #dddddd [
  Mobile App
  --
  Mobile App: Flutter/Apache
  Cordova/React Native
]
rectangle 8 <<Software System>> #dddddd [
  Monitoring System
  --
  Monitoring System: Prometheus
]
rectangle 31 <<Container>> #dddddd [
  Movements App
  --
  Movements App: Spring Boot
]
rectangle 27 <<Container>> #dddddd [
  Notifications App
  --
  Notifications Service: Spring
  Boot
]
rectangle 3 <<Software System>> #dddddd [
  Notifications System
  --
  Notifications System
]
rectangle 28 <<Container>> #dddddd [
  Notifications sender App
  --
  Queues notifications: Java,
  Messaging suite, Spring Boot
]
rectangle 5 <<Software System>> #dddddd [
  OAuth2 Authentication Provider
  --
  OAuth2 Authentication
  Provider
]
rectangle 6 <<Software System>> #dddddd [
  Onboarding Provider
  --
  Onboarding Provider
]
rectangle 7 <<Software System>> #dddddd [
  Services Orchestrator
  --
  Services Orchestrator:
  Kubernetes / Spring Cloud /
  AWS EKS
]
rectangle 26 <<Container>> #dddddd [
  Top clients Database
  --
  Top clients Database: High
  Availability Database Cluster
]
rectangle 32 <<Container>> #dddddd [
  Transfer App
  --
  Transfer App: Spring Boot
]
rectangle 2 <<Software System>> #dddddd [
  User Information System
  --
  User Information System
]
rectangle 23 <<Container>> #dddddd [
  Web Single Page App
  --
  Web Single Page App:
  React/Angular
]
package "User Info App" <<Container>> {
  component 77 <<Component>> #dddddd [
    Banking Core Facade Client
    --
    Banking Core Facade Client
  ]
  component 79 <<Component>> #dddddd [
    Top Clients Manager
    --
    Top Clients Manager
  ]
  component 80 <<Component>> #dddddd [
    User Info Logic Component
    --
    User Info Logic Component
  ]
  component 76 <<Component>> #dddddd [
    User Info Rest Controller
    --
    User Info Rest Controller
  ]
  component 78 <<Component>> #dddddd [
    User Info System Client
    --
    User Info System Client
  ]
}
29 .[#707070].> 31 : Publish services provided by
29 .[#707070].> 27 : Publish services provided by
29 .[#707070].> 32 : Publish services provided by
29 .[#707070].> 76 : Publish services provided by
9 .[#707070].> 24 : Uses the mobile app to make transactions, query movements
9 .[#707070].> 23 : Uses the web single page app to make transactions, query movements
33 .[#707070].> 1 : Query movements from 
33 .[#707070].> 1 : Make transactions in 
77 .[#707070].> 33 : Gets user info using
24 .[#707070].> 29 : Make API service calls to get user information, execute transactions, query movements
24 .[#707070].> 5 : Authenticates user using Authorization Code Flow with Proof Key for Code Exchange
24 .[#707070].> 6 : Registers new users and devices using
8 .[#707070].> 7 : Executes system monitoring
31 .[#707070].> 25 : Stores transaction history 
31 .[#707070].> 33 : Query movements from 
27 .[#707070].> 28 : Send required notifications to
3 .[#707070].> 9 : Delivers notifications to
28 .[#707070].> 3 : Queues notifications and requests them to
79 .[#707070].> 26 : Registers top clients and retrieves them from 
32 .[#707070].> 25 : Stores transaction history 
32 .[#707070].> 33 : Make transactions in 
80 .[#707070].> 77 : Gets user info using
80 .[#707070].> 79 : Registers top clients and retrieves them
80 .[#707070].> 78 : Gets user info using
76 .[#707070].> 80 : Gets user info using
78 .[#707070].> 2 : Gets user info from
23 .[#707070].> 29 : Make API service calls to get user information, execute transactions, query movements
23 .[#707070].> 5 : Authenticates user using Authorization Code Flow with Proof Key for Code Exchange
@enduml
